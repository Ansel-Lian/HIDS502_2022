---
title: "Local OpenEMR database example"
author: "Nathan Cobb"
format: html
---


```{r}
library(RMariaDB)
library(connections) # helps RMariaDB work with RStudio

con <- connection_open(RMariaDB::MariaDB(),
                       dbname='openemr',
                       host='localhost',
                       port=3306,
                       user='root',
                       password='')
knitr::opts_chunk$set(connection = "con")
```

# Querying via SQL

We can query our database by writing bare SQL, in general this is what we will expect you to do most of the time.

```{sql connection = con}
SELECT gender, COUNT(*) total_patients
FROM patients
GROUP BY gender
```

```{sql connection = con}
SELECT pid,language,fname,lname
FROM patient_data
```

```{sql connection = con}
con <- dbConnect(RMySQL::MySQL(),
                 dbname='openemr',
                 host='localhost',
                 port=3306,
                 user='root',
                 password='')
result = dbSendQuery(con, "select pid,language,fname,lname
from patient_data")
data.frame = fetch(result, n = 5)
print(data.frame)

#dbListTables(con)

#{sql connection = con}
#SELECT *
#FROM patient_data
```

# Querying and saving

Sometimes you may want to take the results from your query and then pass them to plotting or other manipulations. You can do this with the `output.var` parameter. (Note that the date manipulations below are PostgreSQL specific - we will review this in more detail in the course.)

```{sql connection=con, output.var="patients_df"}
-- Here we use `output.var` to assign the results of the query to a variable
-- rather than printing!
  SELECT gender, date_part('year', age(current_date, birthdate)) AS age
FROM patients
```

```{r}
ggplot(patients_df) +
  geom_boxplot(aes(x = age, fill = gender)) +
  ggtitle(label = "Patients Age")
```

Hank Rappaport, MD
Senior Clinical Informaticist,
Diplomate, Clinical Informatics, American Board of Preventive Medicine
Medstar Institute for Innovation
(240)205-1052
